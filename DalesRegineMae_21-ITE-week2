<?php

// Class Book
class Book {
    public $title;
    protected $author;
    private $price;

    // Constructor to initialize the properties
    public function __construct($title, $author, $price) {
        $this->title = $title;
        $this->author = $author;
        $this->price = $price;
    }

    // Method to get the details of the book
    public function getDetails() {
        return "Title: $this->title, Author: $this->author, Price: \$$this->price";
    }

    // Method to set the price of the book
    public function setPrice($price) {
        $this->price = $price;
    }

    // Magic method to handle non-existent method calls (simulating method overloading)
    public function __call($name, $arguments) {
        if ($name == 'updateStock') {
            return "Stock updated for '{$this->title}' with arguments: " . implode(', ', $arguments);
        }
        return "Method '$name' does not exist!";
    }
}

// Class Library
class Library {
    public $name;
    private $books = [];

    // Constructor to initialize the library name
    public function __construct($name) {
        $this->name = $name;
    }

    // Method to add a book to the library
    public function addBook(Book $book) {
        $this->books[] = $book;
    }

    // Method to remove a book from the library by title
    public function removeBook($title) {
        foreach ($this->books as $key => $book) {
            if ($book->title === $title) {
                unset($this->books[$key]);
                return "Book '$title' removed from the Library.";
            }
        }
        return "Book '$title' not found in the Library.";
    }

    // Method to list all books in the library
    public function listBooks() {
        if (empty($this->books)) {
            return "No books available in the library.";
        }

        foreach ($this->books as $book) {
            echo $book->getDetails() . "\n";
        }
    }

    // Destructor to clear the library and output a message
    public function __destruct() {
        echo "The library '{$this->name}' is now closed.\n";
    }
}

// Implementation
// Create instances of Book
$book1 = new Book("The Great Gatsby", "F. Scott Fitzgerald", 12.99);
$book2 = new Book("1984", "George Orwell", 8.99);

// Create an instance of Library
$library = new Library("City Library");

// Add books to the library
$library->addBook($book1);
$library->addBook($book2);

// Update stock (method overloading simulation)
echo $book1->updateStock(50) . "\n";

// List all books in the library
echo "Books in the library:\n";
$library->listBooks();

// Remove a book from the library
echo $library->removeBook("1984") . "\n";

// List all books again after removal
echo "Books in the library after removal:\n";
$library->listBooks();

// Destroy the Library object (this will trigger the destructor)
unset($library);

?>
